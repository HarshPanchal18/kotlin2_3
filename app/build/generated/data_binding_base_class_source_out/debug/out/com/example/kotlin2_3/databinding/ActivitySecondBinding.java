// Generated by view binder compiler. Do not edit!
package com.example.kotlin2_3.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.constraint.ConstraintLayout;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import com.example.kotlin2_3.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySecondBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button homescr;

  @NonNull
  public final Button sendToOtherApp;

  @NonNull
  public final TextView txvUserMessage;

  @NonNull
  public final EditText usrmsg;

  private ActivitySecondBinding(@NonNull ConstraintLayout rootView, @NonNull Button homescr,
      @NonNull Button sendToOtherApp, @NonNull TextView txvUserMessage, @NonNull EditText usrmsg) {
    this.rootView = rootView;
    this.homescr = homescr;
    this.sendToOtherApp = sendToOtherApp;
    this.txvUserMessage = txvUserMessage;
    this.usrmsg = usrmsg;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySecondBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySecondBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_second, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySecondBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.homescr;
      Button homescr = ViewBindings.findChildViewById(rootView, id);
      if (homescr == null) {
        break missingId;
      }

      id = R.id.sendToOtherApp;
      Button sendToOtherApp = ViewBindings.findChildViewById(rootView, id);
      if (sendToOtherApp == null) {
        break missingId;
      }

      id = R.id.txvUserMessage;
      TextView txvUserMessage = ViewBindings.findChildViewById(rootView, id);
      if (txvUserMessage == null) {
        break missingId;
      }

      id = R.id.usrmsg;
      EditText usrmsg = ViewBindings.findChildViewById(rootView, id);
      if (usrmsg == null) {
        break missingId;
      }

      return new ActivitySecondBinding((ConstraintLayout) rootView, homescr, sendToOtherApp,
          txvUserMessage, usrmsg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
